(define (domain emergency-services)
  (:requirements :strips :typing)

  ; Types
  (:types
    person box content location agent - object
    food medicine tool - content-type
    food-true food-false medicine-true medicine-false tool-true tool-false - content-state
  )

  ; Predicates
  (:predicates
    (at ?x - object ?l - location)
    (empty ?x - box)
    (has-content ?p - person ?c - content-type ?s - content-state)
  )

  ; Actions
  (:action fill
    :parameters (?a - agent ?b - box ?c - content-type ?l - location)
    :precondition (and
      (at ?a ?l)
      (at ?b ?l)
      (empty ?b)
      (at ?c ?l)
    )
    :effect (and
      (not (empty ?b))
      (at ?c ?l)
    )
  )

  (:action empty
    :parameters (?a - agent ?b - box ?c - content-type ?l - location ?p - person)
    :precondition (and
      (at ?a ?l)
      (at ?b ?l)
      (not (empty ?b))
      (has-content ?p ?c ?s)
      (at ?p ?l)
    )
    :effect (and
      (empty ?b)
      (has-content ?p ?c true)
      (not (at ?c ?l))
    )
  )

  (:action pick-up
    :parameters (?a - agent ?b - box ?l - location)
    :precondition (and
      (at ?a ?l)
      (at ?b ?l)
      (empty ?b)
    )
    :effect (and
      (not (empty ?b))
      (not (at ?b ?l))
      (at ?b ?a)
    )
  )

  (:action move
    :parameters (?a - agent ?l1 ?l2 - location ?b - box)
    :precondition (and
      (at ?a ?l1)
      (or
        (not (at ?b ?a))
        (and (at ?b ?a) (not (empty ?b)))
