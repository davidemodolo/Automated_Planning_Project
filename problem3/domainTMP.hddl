(define (domain problem2-HTN)
    (:requirements :strips :typing :equality :negative-preconditions :disjunctive-preconditions :conditional-effects :existential-preconditions :universal-preconditions)
    (:types
        person robotic_agent location box carrier supply - object
        food medicine tools - supply
    )
    (:predicates
        (location_robot ?r - robotic_agent ?l - location)
        (location_box ?b - box ?l - location)
        (location_carrier ?c - carrier ?l - location)
        (location_supply ?s - supply ?l - location)
        (location_person ?p - person ?l - location)
        (box_on_carrier ?b - box ?c - carrier)
        (box_loaded ?b - box)
        (box_is_empty ?b - box)
        (box_with_supply ?b - box ?s - supply)
        (carrier_has_no_robot ?c - carrier)
        (robot_has_no_carrier ?r - robotic_agent)
        (robot_carrier_attached ?r - robotic_agent ?c - carrier)
        ; since a carrier can load only up to 4 boxes, we create all the predicates
        (carrier_has_box1 ?c - carrier)
        (carrier_has_box2 ?c - carrier)
        (carrier_has_box3 ?c - carrier)
        (carrier_has_box4 ?c - carrier)
        (carrier_loaded_1 ?c - carrier ?b - box)
        (carrier_loaded_2 ?c - carrier ?b - box)
        (carrier_loaded_3 ?c - carrier ?b - box)
        (carrier_loaded_4 ?c - carrier ?b - box)
        (delivered ?p - person ?s - supply)
    )
    (:tasks move_robot ?r - robotic_agent ?l1 - location ?l2 - location)
    (:tasks attach_carrier_to_robot ?r - robotic_agent ?l1 - location ?c - carrier)
    (:tasks detach_carrier_from_robot ?r - robotic_agent ?l1 - location ?c - carrier)
    (:tasks move_robot_with_carrier_no_box ?r - robotic_agent ?l1 - location ?l2 - location ?c - carrier)
    (:tasks move_robot_with_carrier_box1 ?r - robotic_agent ?l1 - location ?l2 - location ?c - carrier ?b - box)
    (:tasks move_robot_with_carrier_box12 ?r - robotic_agent ?l1 - location ?l2 - location ?c - carrier ?b1 - box ?b2 - box)
    (:tasks move_robot_with_carrier_box123 ?r - robotic_agent ?l1 - location ?l2 - location ?c - carrier ?b1 - box ?b2 - box ?b3 - box)
    (:tasks move_robot_with_carrier_box1234 ?r - robotic_agent ?l1 - location ?l2 - location ?c - carrier ?b1 - box ?b2 - box ?b3 - box ?b4 - box)
    (:tasks load_box1_on_carrier ?c - carrier ?b - box ?l - location ?r - robotic_agent)
    (:tasks unload_box1_from_carrier ?c - carrier ?b - box ?l - location ?r - robotic_agent)
    (:tasks load_box2_on_carrier ?c - carrier ?b - box ?l - location ?r - robotic_agent)
    (:tasks unload_box2_from_carrier ?c - carrier ?b - box ?l - location ?r - robotic_agent)
    (:tasks load_box3_on_carrier ?c - carrier ?b - box ?l - location ?r - robotic_agent)
    (:tasks unload_box3_from_carrier ?c - carrier ?b - box ?l - location ?r - robotic_agent)
    (:tasks load_box4_on_carrier ?c - carrier ?b - box ?l - location ?r - robotic_agent)
    (:tasks unload_box4_from_carrier ?c - carrier ?b - box ?l - location ?r - robotic_agent)
    (:tasks fill_box ?r - robotic_agent ?l1 - location ?b - box ?s - supply)
    (:tasks deliver ?r - robotic_agent ?l1 - location ?p - person ?s - supply ?b - box)
    (:methods
        ; move the robot
        (:method (move_robot ?r ?l1 ?l2)
            (precondition (and (location_robot ?r ?l1) (not (= ?l1 ?l2)) (robot_has_no_carrier ?r)))
            (effect (and
                (not (location_robot ?r ?l1))
                (location_robot ?r ?l2)
            ))
        )
        ; attach a carrier to a robot
        (:method (attach_carrier_to_robot ?r ?l1 ?c)
            (precondition (and (location_robot ?r ?l1) (location_carrier ?c ?l1) (carrier_has_no_robot ?c) (robot_has_no_carrier ?r)))
            (effect (and (not (carrier_has_no_robot ?c)) (not (robot_has_no_carrier ?r)) (robot_carrier_attached ?r ?c)))
        )
        ; detach a carrier from a robot
        (:method (detach_carrier_from_robot ?r ?l1 ?c)
            (precondition (and (location_robot ?r ?l1) (robot_carrier_attached ?r ?c)))
            (effect (and (carrier_has_no_robot ?c) (robot_has_no_carrier ?r) (not (robot_carrier_attached ?r ?c))))
        )
        ; move a robot with a carrier attached and no boxes
        (:method (move_robot_with_carrier_no_box ?r ?l1 ?l2 ?c)
            (precondition (and
                (location_robot ?r ?l1)
                (location_carrier ?c ?l1)
                (robot_carrier_attached ?r ?c)
                (not (= ?l1 ?l2))
                (not (carrier_has_box1 ?c))
                (not (carrier_has_box2 ?c))
                (not (carrier_has_box3 ?c))
                (not (carrier_has_box4 ?c))
            ))
            (effect (and
                (not (location_robot ?r ?l1))
                (location_robot ?r ?l2)
                (not (location_carrier ?c ?l1))
                (location_carrier ?c ?l2)
            ))
        )
        ; move a robot with a carrier attached and box1 loaded
        (:method (move_robot_with_carrier_box1 ?r ?l1 ?l2 ?c ?b)
            (precondition (and
                (location_robot ?r ?l1)
                (location_carrier ?c ?l1)
                (location_box ?b ?l1)
                (robot_carrier_attached ?r ?c)
                (not (= ?l1 ?l2)) (carrier_has_box1 ?c)
                (carrier_loaded_1 ?c ?b)
                (not (carrier_has_box2 ?c)) (not (carrier_has_box3 ?c)) (not (carrier_has_box4 ?c))
                (box_loaded ?b)
            ))
            (effect (and
                (not (location_robot ?r ?l1))
                (location_robot ?r ?l2)
                (not (location_carrier ?c ?l1))
                (location_carrier ?c ?l2)
                (not (location_box ?b ?l1))
                (location_box ?b ?l2)
            ))
        )
        ; move a robot with a carrier attached and box1, box2 loaded
        (:method (move_robot_with_carrier_box12 ?r ?l1 ?l2 ?c ?b1 ?b2)
            (precondition (and
                (location_robot ?r ?l1)
                (location_carrier ?c ?l1)
                (location_box ?b1 ?l1)
                (location_box ?b2 ?l1)
                (robot_carrier_attached ?r ?c)
                (not (= ?l1 ?l2)) (carrier_has_box1 ?c) (carrier_has_box2 ?c)
                (carrier_loaded_1 ?c ?b1) (carrier_loaded_2 ?c ?b2)
                (not (carrier_has_box3 ?c)) (not (carrier_has_box4 ?c))
                (box_loaded ?b1) (box_loaded ?b2)
            ))
            (effect (and
                (not (location_robot ?r ?l1))
                (location_robot ?r ?l2)
                (not (location_carrier ?c ?l1))
                (location_carrier ?c ?l2)
                (not (location_box ?b1 ?l1))
                (location_box ?b1 ?l2)
                (not (location_box ?b2 ?l1))
                (location_box ?b2 ?l2)
            ))
        )
        ; move a robot with a carrier attached and box1, box2, box3 loaded
        (:method (move_robot_with_carrier_box123 ?r ?l1 ?l2 ?c ?b1 ?b2 ?b3)
            (precondition (and
                (location_robot ?r ?l1)
                (location_carrier ?c ?l1)
                (location_box ?b1 ?l1)
                (location_box ?b2 ?l1)
                (location_box ?b3 ?l1)
                (robot_carrier_attached ?r ?c)
                (not (= ?l1 ?l2)) (carrier_has_box1 ?c) (carrier_has_box2 ?c) (carrier_has_box3 ?c)
                (carrier_loaded_1 ?c ?b1) (carrier_loaded_2 ?c ?b2) (carrier_loaded_3 ?c ?b3)
                (box_loaded ?b1) (box_loaded ?b2) (box_loaded ?b3)
                (not (carrier_has_box4 ?c))
            ))
            (effect (and
                (not (location_robot ?r ?l1))
                (location_robot ?r ?l2)
                (not (location_carrier ?c ?l1))
                (location_carrier ?c ?l2)
                (not (location_box ?b1 ?l1))
                (location_box ?b1 ?l2)
                (not (location_box ?b2 ?l1))
                (location_box ?b2 ?l2)
                (not (location_box ?b3 ?l1))
                (location_box ?b3 ?l2)
            ))
        )
        ; move a robot with a carrier attached and box1, box2, box3, box4 loaded
        (:method (move_robot_with_carrier_box1234 ?r ?l1 ?l2 ?c ?b1 ?b2 ?b3 ?b4)
            (precondition (and
                (location_robot ?r ?l1)
                (location_carrier ?c ?l1)
                (location_box ?b1 ?l1)
                (location_box ?b2 ?l1)
                (location_box ?b3 ?l1)
                (location_box ?b4 ?l1)
                (robot_carrier_attached ?r ?c)
                (not (= ?l1 ?l2)) (carrier_has_box1 ?c) (carrier_has_box2 ?c) (carrier_has_box3 ?c) (carrier_has_box4 ?c)
                (carrier_loaded_1 ?c ?b1) (carrier_loaded_2 ?c ?b2) (carrier_loaded_3 ?c ?b3) (carrier_loaded_4 ?c ?b4)
                (box_loaded ?b1) (box_loaded ?b2) (box_loaded ?b3) (box_loaded ?b4)
            ))
            (effect (and
                (not (location_robot ?r ?l1))
                (location_robot ?r ?l2)
                (not (location_carrier ?c ?l1))
                (location_carrier ?c ?l2)
                (not (location_box ?b1 ?l1))
                (location_box ?b1 ?l2)
                (not (location_box ?b2 ?l1))
                (location_box ?b2 ?l2)
                (not (location_box ?b3 ?l1))
                (location_box ?b3 ?l2)
                (not (location_box ?b4 ?l1))
                (location_box ?b4 ?l2)
            ))
        )
        ; load box1 on the carrier
        (:method (load_box1_on_carrier ?c ?b ?l ?r)
            (precondition (and
                (location_carrier ?c ?l)
                (location_box ?b ?l)
                (location_robot ?r ?l)
                (not (box_loaded ?b))
                (not (carrier_has_box1 ?c))
            ))
            (effect (and
                (box_on_carrier ?b ?c)
                (box_loaded ?b)
                (carrier_has_box1 ?c)
                (carrier_loaded_1 ?c ?b)
            ))
        )
        ; unload box1 from the carrier
        (:method (unload_box1_from_carrier ?c ?b ?l ?r)
            (precondition (and
                (location_carrier ?c ?l)
                (location_box ?b ?l)
                (box_on_carrier ?b ?c)
                (box_loaded ?b)
                (location_robot ?r ?l)
                (carrier_loaded_1 ?c ?b)
                (carrier_has_box1 ?c)
                (not (carrier_has_box2 ?c)) (not (carrier_has_box3 ?c)) (not (carrier_has_box4 ?c))
            ))
            (effect (and
                (not (box_on_carrier ?b ?c))
                (not (box_loaded ?b))
                (location_box ?b ?l)
                (not (carrier_has_box1 ?c))
                (not (carrier_loaded_1 ?c ?b))
            ))
        )
        ; load box2 on the carrier
        (:method (load_box2_on_carrier ?c ?b ?l ?r)
            (precondition (and
                (location_carrier ?c ?l)
                (location_box ?b ?l)
                (location_robot ?r ?l)
                (not (box_loaded ?b))
                (carrier_has_box1 ?c)
                (not (carrier_has_box2 ?c))
            ))
            (effect (and
                (box_on_carrier ?b ?c)
                (box_loaded ?b)
                (carrier_has_box2 ?c)
                (carrier_loaded_2 ?c ?b)
            ))
        )
        ; unload box2 from the carrier
        (:method (unload_box2_from_carrier ?c ?b ?l ?r)
            (precondition (and 
                (location_carrier ?c ?l)
                (location_box ?b ?l)
                (box_on_carrier ?b ?c)
                (box_loaded ?b)
                (location_robot ?r ?l)
                (carrier_loaded_2 ?c ?b)
                (carrier_has_box2 ?c)
                (not (carrier_has_box3 ?c)) (not (carrier_has_box4 ?c))
            ))
            (effect (and
                (not (box_on_carrier ?b ?c))
                (not (box_loaded ?b))
                (location_box ?b ?l)
                (not (carrier_has_box2 ?c))
                (not (carrier_loaded_2 ?c ?b))
            ))
        )
        ; load box3 on the carrier
        (:method (load_box3_on_carrier ?c ?b ?l ?r)
            (precondition (and
                (location_carrier ?c ?l)
                (location_box ?b ?l)
                (location_robot ?r ?l)
                (not (box_loaded ?b))
                (carrier_has_box1 ?c)
                (carrier_has_box2 ?c)
                (not (carrier_has_box3 ?c))
            ))
            (effect (and
                (box_on_carrier ?b ?c)
                (box_loaded ?b)
                (carrier_has_box3 ?c)
                (carrier_loaded_3 ?c ?b)
            ))
        )
        ; unload box3 from the carrier
        (:method (unload_box3_from_carrier ?c ?b ?l ?r)
            (precondition (and 
                (location_carrier ?c ?l)
                (location_box ?b ?l)
                (box_on_carrier ?b ?c)
                (box_loaded ?b)
                (location_robot ?r ?l)
                (carrier_loaded_3 ?c ?b)
                (carrier_has_box3 ?c)
                (not (carrier_has_box4 ?c))
            ))
            (effect (and
                (not (box_on_carrier ?b ?c))
                (not (box_loaded ?b))
                (location_box ?b ?l)
                (not (carrier_has_box3 ?c))
                (not (carrier_loaded_3 ?c ?b))
            ))
        )
        ; load box4 on the carrier
        (:method (load_box4_on_carrier ?c ?b ?l ?r)
            (precondition (and
                (location_carrier ?c ?l)
                (location_box ?b ?l)
                (location_robot ?r ?l)
                (not (box_loaded ?b))
                (carrier_has_box1 ?c)
                (carrier_has_box2 ?c)
                (carrier_has_box3 ?c)
                (not (carrier_has_box4 ?c))
            ))
            (effect (and
                (box_on_carrier ?b ?c)
                (box_loaded ?b)
                (carrier_has_box4 ?c)
                (carrier_loaded_4 ?c ?b)
            ))
        )
        ; unload box4 from the carrier
        (:method (unload_box4_from_carrier ?c ?b ?l ?r)
            (precondition (and 
                (location_carrier ?c ?l)
                (location_box ?b ?l)
                (box_on_carrier ?b ?c)
                (box_loaded ?b)
                (location_robot ?r ?l)
                (carrier_loaded_4 ?c ?b)
                (carrier_has_box4 ?c)
            ))
            (effect (and
                (not (box_on_carrier ?b ?c))
                (not (box_loaded ?b))
                (location_box ?b ?l)
                (not (carrier_has_box4 ?c))
                (not (carrier_loaded_4 ?c ?b))
            ))
        )
        ; fill a box with supply
        (:method (fill_box ?r ?l1 ?b ?s)
            (precondition (and (location_robot ?r ?l1) (location_supply ?s ?l1) (box_is_empty ?b) (location_box ?b ?l1) (not (box_loaded ?b))))
            (effect (and (not (location_supply ?s ?l1)) (box_with_supply ?b ?s) (not (box_is_empty ?b))))
        )
        ; deliver a supply to a person
        (:method (deliver ?r ?l1 ?p ?s ?b)
            (precondition (and (location_robot ?r ?l1) (location_person ?p ?l1) (location_box ?b ?l1) (box_with_supply ?b ?s) (not (box_is_empty ?b)) (not (box_loaded ?b))))
            (effect (and (not (box_with_supply ?b ?s)) (delivered ?p ?s) (box_is_empty ?b)))
        )
    )
)
